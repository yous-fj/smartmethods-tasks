<?xml version="1.0" encoding="UTF-8"?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[clear all
cam = webcam();
cam.Resolution = '320x240';
video_frame = snapshot(cam);
 video_player =vision.VideoPlayer('position',[100 100 320 240]);
 face_detector = vision.CascadeObjectDetector();
 point_Tracker = vision.pointTracker('MaxBidirectionalError',2);
 run_loop = true;
 number_of_points=0;
 frame_count=0;
while run_loop && frame_count<400
    video_frame = snapshot(cam);
    gray_frame =rgb2gray(video_frame);
    frame_count = frame_count+1;
    if number_of_points<10
        face_rectangular =face_detector.step(gray_frame);
        if isempty(face_rectangular)
            points = detectMinEigenFeatures(gray_frame,'ROI', face_rectangular(1,:));
            xy_Points = points.Location;
            number_of_points =size(xy_Points, 1);
            release(point_Tracker);
            initialize(point_Tracker,xy_Points,gray_frame);
            previous_points= xy_Points;
            rectangle = bbox2points(face_rectangular(1, :));
            face_Polygon = reshape(rectangle',1,[]);
            video_frame = insertshape(video_frame, 'polygon', face_Polygon, 'LineWidth', 3);
            video_frame = insertMarker(video_frame, xy_Points,'+', 'color','white');
            
        end
    else
        [xy_Points, isFound]= step(point_Tracker, gray_frame);
        new_points =xy_Points(isFound, :);
        old_points =previous_points(isFound, :);
        number_of_points= size(new_points, 1);
        if number_of_points>=10
            [xform,old_points,new_points]=estimateGeometricTransform(old_points, new_points,'similarity','MaxDistance', 4);
            rectangle =transformPointsForward(xform, rectangle);
            face_Polygon = reshape(rectangle',1,[]);
            video_frame= insertshape(video_frame, 'polygon',face_Polygon, 3);
            video_frame =insertMarker(video_frame,new_points,'+','color','white');
            previous_points =new_points;
            setPoints(point_Tracker,previous_points);
            
        end
        
        
        
        
        
        
        
    end
    step(video_player,video_frame);
    run_loop = isOpen(video_player);
end
clear cam;
release(video_player);
release(point_Tracker);
release(face_detector);]]></w:t></w:r></w:p></w:body></w:document>